{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MRUNMAYI\\\\OneDrive\\\\Desktop\\\\BTP_GymTracker\\\\src\\\\hooks\\\\useWorkoutData.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { calculateTotalVolume, getProgressData, getTotalVolumeByDay } from '../utils/calculations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [workoutHistory, setWorkoutHistory] = useState([]);\n  const addWorkout = (exercise, sets, reps, weight, day) => {\n    const workoutEntry = {\n      id: Date.now(),\n      date: new Date().toISOString().split('T')[0],\n      day,\n      exercise,\n      sets: parseInt(sets),\n      reps: parseInt(reps),\n      weight: parseFloat(weight),\n      totalVolume: calculateTotalVolume(sets, reps, weight)\n    };\n    setWorkoutHistory(prev => [...prev, workoutEntry]);\n    return workoutEntry;\n  };\n  const getExerciseProgress = exercise => {\n    return getProgressData(workoutHistory, exercise);\n  };\n  const getVolumeData = () => {\n    return getTotalVolumeByDay(workoutHistory);\n  };\n  const getRecentWorkouts = (limit = 5) => {\n    return workoutHistory.slice(-limit).reverse();\n  };\n  const value = {\n    workoutHistory,\n    addWorkout,\n    getExerciseProgress,\n    getVolumeData,\n    getRecentWorkouts\n  };\n  return /*#__PURE__*/_jsxDEV(WorkoutContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"zERowZpayGaACgYtfYOXO2kiOf8=\");\n_c = AppProvider;\nexport const useWorkoutData = () => {\n  _s2();\n  const context = useContext(WorkoutContext);\n  if (!context) {\n    throw new Error('useWorkoutData must be used within AppProvider');\n  }\n  return context;\n};\n_s2(useWorkoutData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","calculateTotalVolume","getProgressData","getTotalVolumeByDay","jsxDEV","_jsxDEV","WorkoutContext","AppProvider","children","_s","workoutHistory","setWorkoutHistory","addWorkout","exercise","sets","reps","weight","day","workoutEntry","id","Date","now","date","toISOString","split","parseInt","parseFloat","totalVolume","prev","getExerciseProgress","getVolumeData","getRecentWorkouts","limit","slice","reverse","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWorkoutData","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/MRUNMAYI/OneDrive/Desktop/BTP_GymTracker/src/hooks/useWorkoutData.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { calculateTotalVolume, getProgressData, getTotalVolumeByDay } from '../utils/calculations';\r\n\r\nconst WorkoutContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [workoutHistory, setWorkoutHistory] = useState([]);\r\n\r\n  const addWorkout = (exercise, sets, reps, weight, day) => {\r\n    const workoutEntry = {\r\n      id: Date.now(),\r\n      date: new Date().toISOString().split('T')[0],\r\n      day,\r\n      exercise,\r\n      sets: parseInt(sets),\r\n      reps: parseInt(reps),\r\n      weight: parseFloat(weight),\r\n      totalVolume: calculateTotalVolume(sets, reps, weight)\r\n    };\r\n\r\n    setWorkoutHistory(prev => [...prev, workoutEntry]);\r\n    return workoutEntry;\r\n  };\r\n\r\n  const getExerciseProgress = (exercise) => {\r\n    return getProgressData(workoutHistory, exercise);\r\n  };\r\n\r\n  const getVolumeData = () => {\r\n    return getTotalVolumeByDay(workoutHistory);\r\n  };\r\n\r\n  const getRecentWorkouts = (limit = 5) => {\r\n    return workoutHistory\r\n      .slice(-limit)\r\n      .reverse();\r\n  };\r\n\r\n  const value = {\r\n    workoutHistory,\r\n    addWorkout,\r\n    getExerciseProgress,\r\n    getVolumeData,\r\n    getRecentWorkouts\r\n  };\r\n\r\n  return (\r\n    <WorkoutContext.Provider value={value}>\r\n      {children}\r\n    </WorkoutContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useWorkoutData = () => {\r\n  const context = useContext(WorkoutContext);\r\n  if (!context) {\r\n    throw new Error('useWorkoutData must be used within AppProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,oBAAoB,EAAEC,eAAe,EAAEC,mBAAmB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnG,MAAMC,cAAc,gBAAGR,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMS,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMY,UAAU,GAAGA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,GAAG,KAAK;IACxD,MAAMC,YAAY,GAAG;MACnBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC5CP,GAAG;MACHJ,QAAQ;MACRC,IAAI,EAAEW,QAAQ,CAACX,IAAI,CAAC;MACpBC,IAAI,EAAEU,QAAQ,CAACV,IAAI,CAAC;MACpBC,MAAM,EAAEU,UAAU,CAACV,MAAM,CAAC;MAC1BW,WAAW,EAAE1B,oBAAoB,CAACa,IAAI,EAAEC,IAAI,EAAEC,MAAM;IACtD,CAAC;IAEDL,iBAAiB,CAACiB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEV,YAAY,CAAC,CAAC;IAClD,OAAOA,YAAY;EACrB,CAAC;EAED,MAAMW,mBAAmB,GAAIhB,QAAQ,IAAK;IACxC,OAAOX,eAAe,CAACQ,cAAc,EAAEG,QAAQ,CAAC;EAClD,CAAC;EAED,MAAMiB,aAAa,GAAGA,CAAA,KAAM;IAC1B,OAAO3B,mBAAmB,CAACO,cAAc,CAAC;EAC5C,CAAC;EAED,MAAMqB,iBAAiB,GAAGA,CAACC,KAAK,GAAG,CAAC,KAAK;IACvC,OAAOtB,cAAc,CAClBuB,KAAK,CAAC,CAACD,KAAK,CAAC,CACbE,OAAO,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,KAAK,GAAG;IACZzB,cAAc;IACdE,UAAU;IACViB,mBAAmB;IACnBC,aAAa;IACbC;EACF,CAAC;EAED,oBACE1B,OAAA,CAACC,cAAc,CAAC8B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA3B,QAAA,EACnCA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAC/B,EAAA,CA9CWF,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAgDxB,OAAO,MAAMmC,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,MAAMC,OAAO,GAAG7C,UAAU,CAACO,cAAc,CAAC;EAC1C,IAAI,CAACsC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,cAAc;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}